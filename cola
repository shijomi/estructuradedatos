#pragma once
#define MAX 100

class Colae
{ private: 
	int info[MAX]; 
	int ini, fin;
 public: 
	Colae (void); 
	bool Encolar (int Valor); 
	bool Desencolar (void); 
	bool PrimeroCola (int &Valor); 
	bool ColaVacia (void);
	void mostrar (void);
};

#include "StdAfx.h"
#include "Colae.h"
#include <iostream>

using namespace std;

Colae::Colae(void)
{ ini = 0; fin = 0; }

bool Colae::ColaVacia (void) 
{ bool b_aux; if (ini == fin) b_aux = true; else b_aux = false; return b_aux; }

bool Colae::Encolar(int Valor) 
{ bool error; 
  if (fin == MAX) 
		error = true; 
  else 
  { error = false;
	info [fin] = Valor;
	fin++; } 
return error; 
}

bool Colae::PrimeroCola (int &Valor) 
{ bool error; 
	if (ColaVacia() ) 
		error = true; 
	else 
{	error = false; 
	Valor = info[ini]; } 
	return error; }

bool Colae::Desencolar (void) 
{	bool error; 
	if (ColaVacia() ) 
		error = true;
	else 
	{ error = false; 
	ini++; } 
return error; }

void Colae::mostrar()
{
	for (int i=ini;i<fin;i++)
		cout<<"["<<info[i]<<"]="<<endl;
	cout<<endl<<endl;
}
// cola.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include "Colae.h"

#define MAX 100

using namespace std;

void main()
{
	Colae cola;
	int Valor;
	for (int j=1;j<10;j++)
		if (!cola.Encolar(j)) 
			cola.mostrar();
		else
			cout<<"Error";
	cout<<endl<<"Desencolar"<<endl;
	if (!cola.Desencolar())
		cola.mostrar();
	else
		cout<<"Error";
	if (!cola.PrimeroCola(Valor))
		cout<<"Valor: "<<Valor;
	getch();
}
